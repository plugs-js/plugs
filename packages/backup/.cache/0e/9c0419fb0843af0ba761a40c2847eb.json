{"id":"node_modules/core-async/src/tools.js","dependencies":[{"name":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\package.json","includedInParent":true,"mtime":1566471754445},{"name":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\package.json","includedInParent":true,"mtime":1566403326807},{"name":"co","loc":{"line":9,"column":19},"parent":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\src\\tools.js","resolved":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\co\\index.js"},{"name":"./utils","loc":{"line":10,"column":48},"parent":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\src\\tools.js","resolved":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\src\\utils\\index.js"},{"name":"./channel","loc":{"line":11,"column":28},"parent":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\src\\tools.js","resolved":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\src\\channel.js"}],"generated":{"js":"/**\n * Copyright (c) 2017-2019, Neap Pty Ltd.\n * All rights reserved.\n * \n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n*/\n\nconst co = require('co')\nconst { error: { throwIfNotTruthy } } = require('./utils')\nconst { Channel } = require('./channel')\n\n/**\n * [description]\n * @param  {[Channel]} channels [description]\n * @return {Channel}     \t\t[description]\n */\nconst merge = channels => {\n\tthrowIfNotTruthy(channels, 'channels')\n\tif (!Array.isArray(channels))\n\t\tthrow new Error('Wrong argument exception. \\'channels\\' must be an array of Channel types.')\n\tchannels.forEach((chan,idx) => {\n\t\tif (!(chan instanceof Channel))\n\t\t\tthrow new Error(`Wrong argument exception. 'channels[${idx}]' must be a Channel type.`)\n\t})\n\n\tconst out = new Channel()\n\n\tchannels.forEach(chan => {\n\t\tco(function *() {\n\t\t\tlet channelNotClosed = true\n\t\t\twhile(channelNotClosed) {\n\t\t\t\tconst data = yield chan.take()\n\t\t\t\tif (data === null)\n\t\t\t\t\tchannelNotClosed = false \n\t\t\t\telse\n\t\t\t\t\tout.put(data)\n\t\t\t}\n\t\t})\n\t})\n\n\treturn out\n}\n\n/**\n * PubSub object\n * \n * @return {Function} pubSub.pub \t(topics,value) => [Void] where 'topics' is an array of strings and 'value' is any object that\n *                                \tneeds to be published on those specific 'topics'.\n * @return {Function} pubSub.sub \t(topics,subscriber) => [Void] where 'topics' is an array of strings and 'subscriber' is a Channel \n *                                \tthat listen to published object on those 'topics'.\n */\nconst PubSub = function() {\n\tlet subscribers = {}\n\tconst publisher = new Channel()\n\n\tthis.pub = (topics, value) => {\n\t\tthrowIfNotTruthy(topics,'topics')\n\t\tconst _topics = typeof(topics) == 'string' ? [topics] : Array.isArray(topics) ? topics : null\n\t\tif (!_topics)\n\t\t\tthrow new Error('Wrong argument exception. \\'topics\\' must either be a string or an array of strings.')\n\n\t\t_topics.filter(x => x).forEach(topic => publisher.put({ topic, value }))\n\t}\n\t\n\tthis.sub = (topics, subscriber) => {\n\t\tthrowIfNotTruthy(topics,'topics')\n\t\tconst _topics = typeof(topics) == 'string' ? [topics] : Array.isArray(topics) ? topics : null\n\t\tif (!_topics)\n\t\t\tthrow new Error('Wrong argument exception. \\'topics\\' must either be a string or an array of strings.')\n\t\t\n\t\tthrowIfNotTruthy(subscriber,'subscriber')\n\t\tif (!(subscriber instanceof Channel))\n\t\t\tthrow new Error('Wrong argument exception. \\'subscriber\\' must be a Channel type.')\n\n\t\t_topics.filter(x => x).forEach(topic => {\n\t\t\tif (!subscribers[topic])\n\t\t\t\tsubscribers[topic] = []\n\t\t\tsubscribers[topic].push(subscriber)\n\t\t})\n\t}\n\n\tthis.unsub = (topics, subscriber) => {\n\t\tthrowIfNotTruthy(topics,'topics')\n\t\tconst _topics = typeof(topics) == 'string' ? [topics] : Array.isArray(topics) ? topics : null\n\t\tif (!_topics)\n\t\t\tthrow new Error('Wrong argument exception. \\'topics\\' must either be a string or an array of strings.')\n\t\t\n\t\tthrowIfNotTruthy(subscriber,'subscriber')\n\t\tif (!(subscriber instanceof Channel))\n\t\t\tthrow new Error('Wrong argument exception. \\'subscriber\\' must be a Channel type.')\n\n\t\t_topics.filter(x => x).forEach(topic => {\n\t\t\tif (!subscribers[topic])\n\t\t\t\tsubscribers[topic] = []\n\t\t\tsubscribers[topic] = subscribers[topic].filter(s => s != subscriber)\n\t\t})\n\t}\n\n\tco(function *(){\n\t\twhile(true) {\n\t\t\tconst data = yield publisher.take()\n\n\t\t\tif (data && data.topic && subscribers[data.topic])\n\t\t\t\tsubscribers[data.topic].forEach(subscriber => subscriber.put(data.value))\n\t\t}\n\t})\n\n\treturn this\n}\n\n/**\n * [description]\n * @param  {Channel}  chan        \t\t\t[description]\n * @param  {Channel}  subscribers[].chan \t[description]\n * @param  {Function} subscribers[].rule \t(data) => [Boolean] where data is a chan's brick\n * @result {Void}\n */\nconst subscribe = (chan,subscribers) => {\n\tthrowIfNotTruthy(chan,'chan')\n\tif (!(chan instanceof Channel))\n\t\tthrow new Error('Wrong argument exception. \\'chan\\' must be a Channel type.')\n\n\tthrowIfNotTruthy(subscribers,'subscribers')\n\tconst _subscribers = Array.isArray(subscribers) ? subscribers : [subscribers]\n\t_subscribers.forEach((subscriber,idx) => {\n\t\tthrowIfNotTruthy(subscriber,'subscriber')\n\t\tthrowIfNotTruthy(subscriber.rule,'subscriber.rule')\n\t\tthrowIfNotTruthy(subscriber.chan,'subscriber.chan')\n\t\tif (!(subscriber.chan instanceof Channel))\n\t\t\tthrow new Error(`Wrong argument exception. 'subscriber[${idx}].chan' must be a Channel type.`)\n\t\tif (typeof(subscriber.rule) != 'function')\n\t\t\tthrow new Error(`Wrong argument exception. 'subscriber[${idx}].rule' must be a function.`)\n\t})\n\n\tco(function *(){\n\t\tlet channelNotClosed = true\n\t\twhile(channelNotClosed) {\n\t\t\tconst data = yield chan.take()\n\t\t\tif (data === null)\n\t\t\t\tchannelNotClosed = false \n\t\t\telse\n\t\t\t\t_subscribers.filter(({ rule }) => rule(data)).forEach(({ chan:c }) => c.put(data))\n\t\t}\n\t})\n}\n\n/**\n * Throttles a series on tasks\n * \n * @param {[Function]} tasks \tArray of functions representing a tasks\n * @param {Number} \t   buffer \tBuffer size, i.e., the maximum number of concurrent tasks\n * @yield {[Object]}   output \tThe results of each tasks.\n */\nconst throttle = (tasks, buffer) => co(function *(){\n\tif (!buffer)\n\t\tthrow new Error('Missing required argument \\'buffer\\'')\n\tif (typeof(buffer) != 'number')\n\t\tthrow new Error(`Wrong argument exception 'buffer'. 'buffer' must be a number (current: ${typeof(buffer)})`)\n\n\tbuffer = buffer > 0 ? buffer : 1\n\n\ttasks = tasks || []\n\tconst chan = new Channel(buffer)\n\tconst l = tasks.length\n\n\tconst results = []\n\tfor(let i=0;i<l;i++) {\n\t\tyield chan.put(i)\n\t\tresults.push(Promise.resolve(null)\n\t\t\t.then(tasks[i])\n\t\t\t.catch(error => ({ error }))\n\t\t\t.then(result => {\n\t\t\t\tchan.take()\n\t\t\t\treturn result\n\t\t\t}))\n\t}\n\treturn yield results\n})\n\nmodule.exports = {\n\tPubSub,\n\tsubscribe,\n\tmerge,\n\tthrottle\n}\n\n\n\n\n\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-async/src/tools.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/core-async/src/tools.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}}],"sources":{"node_modules/core-async/src/tools.js":"/**\n * Copyright (c) 2017-2019, Neap Pty Ltd.\n * All rights reserved.\n * \n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n*/\n\nconst co = require('co')\nconst { error: { throwIfNotTruthy } } = require('./utils')\nconst { Channel } = require('./channel')\n\n/**\n * [description]\n * @param  {[Channel]} channels [description]\n * @return {Channel}     \t\t[description]\n */\nconst merge = channels => {\n\tthrowIfNotTruthy(channels, 'channels')\n\tif (!Array.isArray(channels))\n\t\tthrow new Error('Wrong argument exception. \\'channels\\' must be an array of Channel types.')\n\tchannels.forEach((chan,idx) => {\n\t\tif (!(chan instanceof Channel))\n\t\t\tthrow new Error(`Wrong argument exception. 'channels[${idx}]' must be a Channel type.`)\n\t})\n\n\tconst out = new Channel()\n\n\tchannels.forEach(chan => {\n\t\tco(function *() {\n\t\t\tlet channelNotClosed = true\n\t\t\twhile(channelNotClosed) {\n\t\t\t\tconst data = yield chan.take()\n\t\t\t\tif (data === null)\n\t\t\t\t\tchannelNotClosed = false \n\t\t\t\telse\n\t\t\t\t\tout.put(data)\n\t\t\t}\n\t\t})\n\t})\n\n\treturn out\n}\n\n/**\n * PubSub object\n * \n * @return {Function} pubSub.pub \t(topics,value) => [Void] where 'topics' is an array of strings and 'value' is any object that\n *                                \tneeds to be published on those specific 'topics'.\n * @return {Function} pubSub.sub \t(topics,subscriber) => [Void] where 'topics' is an array of strings and 'subscriber' is a Channel \n *                                \tthat listen to published object on those 'topics'.\n */\nconst PubSub = function() {\n\tlet subscribers = {}\n\tconst publisher = new Channel()\n\n\tthis.pub = (topics, value) => {\n\t\tthrowIfNotTruthy(topics,'topics')\n\t\tconst _topics = typeof(topics) == 'string' ? [topics] : Array.isArray(topics) ? topics : null\n\t\tif (!_topics)\n\t\t\tthrow new Error('Wrong argument exception. \\'topics\\' must either be a string or an array of strings.')\n\n\t\t_topics.filter(x => x).forEach(topic => publisher.put({ topic, value }))\n\t}\n\t\n\tthis.sub = (topics, subscriber) => {\n\t\tthrowIfNotTruthy(topics,'topics')\n\t\tconst _topics = typeof(topics) == 'string' ? [topics] : Array.isArray(topics) ? topics : null\n\t\tif (!_topics)\n\t\t\tthrow new Error('Wrong argument exception. \\'topics\\' must either be a string or an array of strings.')\n\t\t\n\t\tthrowIfNotTruthy(subscriber,'subscriber')\n\t\tif (!(subscriber instanceof Channel))\n\t\t\tthrow new Error('Wrong argument exception. \\'subscriber\\' must be a Channel type.')\n\n\t\t_topics.filter(x => x).forEach(topic => {\n\t\t\tif (!subscribers[topic])\n\t\t\t\tsubscribers[topic] = []\n\t\t\tsubscribers[topic].push(subscriber)\n\t\t})\n\t}\n\n\tthis.unsub = (topics, subscriber) => {\n\t\tthrowIfNotTruthy(topics,'topics')\n\t\tconst _topics = typeof(topics) == 'string' ? [topics] : Array.isArray(topics) ? topics : null\n\t\tif (!_topics)\n\t\t\tthrow new Error('Wrong argument exception. \\'topics\\' must either be a string or an array of strings.')\n\t\t\n\t\tthrowIfNotTruthy(subscriber,'subscriber')\n\t\tif (!(subscriber instanceof Channel))\n\t\t\tthrow new Error('Wrong argument exception. \\'subscriber\\' must be a Channel type.')\n\n\t\t_topics.filter(x => x).forEach(topic => {\n\t\t\tif (!subscribers[topic])\n\t\t\t\tsubscribers[topic] = []\n\t\t\tsubscribers[topic] = subscribers[topic].filter(s => s != subscriber)\n\t\t})\n\t}\n\n\tco(function *(){\n\t\twhile(true) {\n\t\t\tconst data = yield publisher.take()\n\n\t\t\tif (data && data.topic && subscribers[data.topic])\n\t\t\t\tsubscribers[data.topic].forEach(subscriber => subscriber.put(data.value))\n\t\t}\n\t})\n\n\treturn this\n}\n\n/**\n * [description]\n * @param  {Channel}  chan        \t\t\t[description]\n * @param  {Channel}  subscribers[].chan \t[description]\n * @param  {Function} subscribers[].rule \t(data) => [Boolean] where data is a chan's brick\n * @result {Void}\n */\nconst subscribe = (chan,subscribers) => {\n\tthrowIfNotTruthy(chan,'chan')\n\tif (!(chan instanceof Channel))\n\t\tthrow new Error('Wrong argument exception. \\'chan\\' must be a Channel type.')\n\n\tthrowIfNotTruthy(subscribers,'subscribers')\n\tconst _subscribers = Array.isArray(subscribers) ? subscribers : [subscribers]\n\t_subscribers.forEach((subscriber,idx) => {\n\t\tthrowIfNotTruthy(subscriber,'subscriber')\n\t\tthrowIfNotTruthy(subscriber.rule,'subscriber.rule')\n\t\tthrowIfNotTruthy(subscriber.chan,'subscriber.chan')\n\t\tif (!(subscriber.chan instanceof Channel))\n\t\t\tthrow new Error(`Wrong argument exception. 'subscriber[${idx}].chan' must be a Channel type.`)\n\t\tif (typeof(subscriber.rule) != 'function')\n\t\t\tthrow new Error(`Wrong argument exception. 'subscriber[${idx}].rule' must be a function.`)\n\t})\n\n\tco(function *(){\n\t\tlet channelNotClosed = true\n\t\twhile(channelNotClosed) {\n\t\t\tconst data = yield chan.take()\n\t\t\tif (data === null)\n\t\t\t\tchannelNotClosed = false \n\t\t\telse\n\t\t\t\t_subscribers.filter(({ rule }) => rule(data)).forEach(({ chan:c }) => c.put(data))\n\t\t}\n\t})\n}\n\n/**\n * Throttles a series on tasks\n * \n * @param {[Function]} tasks \tArray of functions representing a tasks\n * @param {Number} \t   buffer \tBuffer size, i.e., the maximum number of concurrent tasks\n * @yield {[Object]}   output \tThe results of each tasks.\n */\nconst throttle = (tasks, buffer) => co(function *(){\n\tif (!buffer)\n\t\tthrow new Error('Missing required argument \\'buffer\\'')\n\tif (typeof(buffer) != 'number')\n\t\tthrow new Error(`Wrong argument exception 'buffer'. 'buffer' must be a number (current: ${typeof(buffer)})`)\n\n\tbuffer = buffer > 0 ? buffer : 1\n\n\ttasks = tasks || []\n\tconst chan = new Channel(buffer)\n\tconst l = tasks.length\n\n\tconst results = []\n\tfor(let i=0;i<l;i++) {\n\t\tyield chan.put(i)\n\t\tresults.push(Promise.resolve(null)\n\t\t\t.then(tasks[i])\n\t\t\t.catch(error => ({ error }))\n\t\t\t.then(result => {\n\t\t\t\tchan.take()\n\t\t\t\treturn result\n\t\t\t}))\n\t}\n\treturn yield results\n})\n\nmodule.exports = {\n\tPubSub,\n\tsubscribe,\n\tmerge,\n\tthrottle\n}\n\n\n\n\n\n\n\n"},"lineCount":194}},"error":null,"hash":"747403b28662079f5f451362fa799132","cacheData":{"env":{}}}