{"id":"node_modules/core-async/src/utils/promise.js","dependencies":[{"name":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\package.json","includedInParent":true,"mtime":1566471754445},{"name":"C:\\Users\\logan\\Projects\\plugs\\packages\\backup\\node_modules\\core-async\\package.json","includedInParent":true,"mtime":1566403326807}],"generated":{"js":"/**\n * Copyright (c) 2017-2019, Neap Pty Ltd.\n * All rights reserved.\n * \n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n*/\n\nconst getRandomNumber = ({ start, end }) => {\n\tconst endDoesNotExist = end === undefined\n\tif (start == undefined && endDoesNotExist)\n\t\treturn Math.random()\n\t\n\tconst _start = start >= 0 ? Math.round(start) : 0\n\tconst _end = end >= 0 ? Math.round(end) : 0\n\tconst size = endDoesNotExist ? _start : (_end - _start)\n\tconst offset = endDoesNotExist ? 0 : _start\n\treturn offset + Math.floor(Math.random() * size)\n}\n\n/**\n * Create an empty promise that returns after a certain delay\n * @param  {Number|[Number]} timeout \tIf array, it must contain 2 numbers representing an interval used to select a random number\n * @return {Promise}         \t\t\t[description]\n */\nconst delay = timeout => Promise.resolve(null).then(() => {\n\tlet t = timeout || 100\n\tif (Array.isArray(timeout)) {\n\t\tif (timeout.length != 2)\n\t\t\tthrow new Error('Wrong argument exception. When \\'timeout\\' is an array, it must contain exactly 2 number items.')\n\n\t\tconst start = timeout[0] * 1\n\t\tconst end = timeout[1] * 1\n\n\t\tif (isNaN(start))\n\t\t\tthrow new Error(`Wrong argument exception. The first item of the 'timeout' array is not a number (current: ${timeout[0]})`)\n\n\t\tif (isNaN(end))\n\t\t\tthrow new Error(`Wrong argument exception. The second item of the 'timeout' array is not a number (current: ${timeout[1]})`)\n\n\t\tif (start > end)\n\t\t\tthrow new Error(`Wrong argument exception. The first number of the 'timeout' array must be strictly smaller than the second number (current: [${timeout[0]}, ${timeout[1]}])`)\t\t\t\n\n\t\tt = getRandomNumber(start, end)\n\t}\n\treturn new Promise(onSuccess => setTimeout(onSuccess, t))\n})\n\nmodule.exports = {\n\tdelay\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-async/src/utils/promise.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}}],"sources":{"node_modules/core-async/src/utils/promise.js":"/**\n * Copyright (c) 2017-2019, Neap Pty Ltd.\n * All rights reserved.\n * \n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n*/\n\nconst getRandomNumber = ({ start, end }) => {\n\tconst endDoesNotExist = end === undefined\n\tif (start == undefined && endDoesNotExist)\n\t\treturn Math.random()\n\t\n\tconst _start = start >= 0 ? Math.round(start) : 0\n\tconst _end = end >= 0 ? Math.round(end) : 0\n\tconst size = endDoesNotExist ? _start : (_end - _start)\n\tconst offset = endDoesNotExist ? 0 : _start\n\treturn offset + Math.floor(Math.random() * size)\n}\n\n/**\n * Create an empty promise that returns after a certain delay\n * @param  {Number|[Number]} timeout \tIf array, it must contain 2 numbers representing an interval used to select a random number\n * @return {Promise}         \t\t\t[description]\n */\nconst delay = timeout => Promise.resolve(null).then(() => {\n\tlet t = timeout || 100\n\tif (Array.isArray(timeout)) {\n\t\tif (timeout.length != 2)\n\t\t\tthrow new Error('Wrong argument exception. When \\'timeout\\' is an array, it must contain exactly 2 number items.')\n\n\t\tconst start = timeout[0] * 1\n\t\tconst end = timeout[1] * 1\n\n\t\tif (isNaN(start))\n\t\t\tthrow new Error(`Wrong argument exception. The first item of the 'timeout' array is not a number (current: ${timeout[0]})`)\n\n\t\tif (isNaN(end))\n\t\t\tthrow new Error(`Wrong argument exception. The second item of the 'timeout' array is not a number (current: ${timeout[1]})`)\n\n\t\tif (start > end)\n\t\t\tthrow new Error(`Wrong argument exception. The first number of the 'timeout' array must be strictly smaller than the second number (current: [${timeout[0]}, ${timeout[1]}])`)\t\t\t\n\n\t\tt = getRandomNumber(start, end)\n\t}\n\treturn new Promise(onSuccess => setTimeout(onSuccess, t))\n})\n\nmodule.exports = {\n\tdelay\n}\n"},"lineCount":52}},"error":null,"hash":"8ab2e5213910b76d8086f6458da88a04","cacheData":{"env":{}}}